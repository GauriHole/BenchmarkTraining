** Steps to be Followed ↕️ **
__1. Start__

__2. DOMContentLoaded Event Listener__
   - Event: Wait for the document to fully load.

__3. Initialize Variables__
   - Get references to input, buttons, and the task list (`inputTodo`, `buttonTodo`, `ulTodo`, `deleteAllButton`).

__4. Load Saved Tasks__
   - Call `loadAllTodo()`
     - Retrieve tasks from `localStorage`.
     - For each task, **Call `createTodo(task)`** to display it in the list.

__5. Add Task Button Click Event (`buttonTodo`)__
   - User clicks **Add** button.
   - Check if input is not empty**:
     - __Yes:__
       - Call `createTodo(input value)` to add task to the list.
       - Clear the input field.
       - Call `saveAllTodo()` to save tasks to `localStorage`.
     - __No:__
       - Do nothing.

__6. Create Todo Function (`createTodo(task)`)__
   - Create a new list item (`li`) with:
     - Task text.
     - **Edit** and **Delete** buttons.
   - Append the new item to `ulTodo`.

__7. Event Delegation on Todo List (`ulTodo.click`)__
   - If Delete Button Clicked:
     - Remove the corresponding task (`li`).
     - Call `saveAllTodo()`.
   
   - If Edit Button Clicked:
     - If not in editing mode:
       - Replace task text with an input box.
       - Change button text to **Save**.
       - Add `editing` class to `li`.
     - If in editing mode (Save clicked):
       - Get updated input value.
       - If not empty:
         - Replace input with updated task text.
         - Change button text back to **Edit**.
         - Remove `editing` class from `li`.
         - Call `saveAllTodo()`.

__8. Delete All Button Click Event (`deleteAllButton`)__
   - On click, show confirmation dialog:
     - **If confirmed**:
       - Clear all tasks from `ulTodo`.
       - Remove `allTodos` from `localStorage`.

__9. Save All Todos Function (`saveAllTodo()`)__
   - Get all current tasks from the DOM.
   - Convert them to an array of text.
   - Save the array to `localStorage`.
